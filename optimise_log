# Baseline, 1E4 hops (10 acceptor sites, 2 electrodes)
2476498 function calls in 9.026 seconds
Ordered by: standard name

ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     1    0.000    0.000    9.026    9.026 <string>:1(<module>)
 10000    0.012    0.000    0.115    0.000 fromnumeric.py:1933(any)
 10000    0.023    0.000    0.103    0.000 fromnumeric.py:64(_wrapreduction)
428245    2.271    0.000    2.271    0.000 kmc_dopant_networks.py:1010(calc_rate_MA)
     1    0.049    0.049    9.026    9.026 kmc_dopant_networks.py:333(simulate)
     1    0.000    0.000    0.000    0.000 kmc_dopant_networks.py:361(reset)
 10000    1.162    0.000    1.162    0.000 kmc_dopant_networks.py:676(calc_site_energies_acc)
 10000    1.254    0.000    5.982    0.001 kmc_dopant_networks.py:696(calc_transitions)
 10000    0.010    0.000    0.150    0.000 kmc_dopant_networks.py:717(callback_standard)
 10000    0.024    0.000    0.058    0.000 kmc_dopant_networks.py:725(callback_avg_carriers)
 10000    0.082    0.000    0.082    0.000 kmc_dopant_networks.py:733(callback_current_vectors)
 10000    1.410    0.000    1.638    0.000 kmc_dopant_networks.py:750(pick_event_standard)
 10000    0.039    0.000    0.039    0.000 kmc_dopant_networks.py:816(perform_event_standard)
 10001    0.006    0.000    0.006    0.000 kmc_dopant_networks.py:833(stopping_criterion_discrete)
1440000    1.684    0.000    1.684    0.000 kmc_dopant_networks.py:948(transition_possible)
428245    0.658    0.000    0.658    0.000 kmc_dopant_networks.py:968(energy_difference)
     1    0.000    0.000    9.026    9.026 {built-in method builtins.exec}
 10000    0.081    0.000    0.081    0.000 {built-in method builtins.min}
 10000    0.034    0.000    0.034    0.000 {built-in method builtins.sum}
 10000    0.018    0.000    0.018    0.000 {built-in method numpy.core.multiarray.where}
 10002    0.042    0.000    0.042    0.000 {built-in method numpy.core.multiarray.zeros}
     1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
 10000    0.068    0.000    0.068    0.000 {method 'exponential' of 'mtrand.RandomState' objects}
 10000    0.003    0.000    0.003    0.000 {method 'items' of 'dict' objects}
 10000    0.020    0.000    0.020    0.000 {method 'rand' of 'mtrand.RandomState' objects}
 10000    0.077    0.000    0.077    0.000 {method 'reduce' of 'numpy.ufunc' objects}

 # Vectorise calc_site_energies_acc
 2755904 function calls in 7.975 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    7.975    7.975 <string>:1(<module>)
    10000    0.004    0.000    0.073    0.000 _methods.py:31(_sum)
    10000    0.004    0.000    0.072    0.000 _methods.py:37(_any)
    10000    0.030    0.000    0.109    0.000 fromnumeric.py:1730(sum)
    10000    0.018    0.000    0.111    0.000 fromnumeric.py:1886(any)
   427948    1.910    0.000    1.910    0.000 kmc_dopant_networks.py:1011(calc_rate_MA)
        1    0.048    0.048    7.975    7.975 kmc_dopant_networks.py:333(simulate)
        1    0.000    0.000    0.000    0.000 kmc_dopant_networks.py:361(reset)
    10000    0.312    0.000    0.761    0.000 kmc_dopant_networks.py:676(calc_site_energies_acc)
    10000    1.216    0.000    5.286    0.001 kmc_dopant_networks.py:692(calc_transitions)
    10000    0.011    0.000    0.144    0.000 kmc_dopant_networks.py:718(callback_standard)
    10000    0.025    0.000    0.057    0.000 kmc_dopant_networks.py:726(callback_avg_carriers)
    10000    0.076    0.000    0.076    0.000 kmc_dopant_networks.py:734(callback_current_vectors)
    10000    1.485    0.000    1.693    0.000 kmc_dopant_networks.py:751(pick_event_standard)
    10000    0.037    0.000    0.037    0.000 kmc_dopant_networks.py:817(perform_event_standard)
    10001    0.007    0.000    0.007    0.000 kmc_dopant_networks.py:834(stopping_criterion_discrete)
  1440000    1.433    0.000    1.433    0.000 kmc_dopant_networks.py:949(transition_possible)
   427948    0.617    0.000    0.617    0.000 kmc_dopant_networks.py:969(energy_difference)
    10000    0.009    0.000    0.065    0.000 numeric.py:150(ones)
    20000    0.008    0.000    0.020    0.000 numeric.py:534(asanyarray)
    10000    0.085    0.000    0.173    0.000 shape_base.py:826(tile)
    20000    0.008    0.000    0.008    0.000 shape_base.py:897(<genexpr>)
    30000    0.009    0.000    0.009    0.000 shape_base.py:907(<genexpr>)
    10000    0.052    0.000    0.088    0.000 twodim_base.py:191(diag)
    10000    0.002    0.000    0.002    0.000 {built-in method builtins.abs}
    10000    0.004    0.000    0.008    0.000 {built-in method builtins.all}
        1    0.000    0.000    7.975    7.975 {built-in method builtins.exec}
    10000    0.006    0.000    0.006    0.000 {built-in method builtins.isinstance}
    20000    0.004    0.000    0.004    0.000 {built-in method builtins.len}
    10000    0.080    0.000    0.080    0.000 {built-in method builtins.min}
    10000    0.032    0.000    0.032    0.000 {built-in method builtins.sum}
    30000    0.017    0.000    0.017    0.000 {built-in method numpy.core.multiarray.array}
    10000    0.032    0.000    0.032    0.000 {built-in method numpy.core.multiarray.copyto}
    10000    0.024    0.000    0.024    0.000 {built-in method numpy.core.multiarray.empty}
    10000    0.016    0.000    0.016    0.000 {built-in method numpy.core.multiarray.where}
    20002    0.059    0.000    0.059    0.000 {built-in method numpy.core.multiarray.zeros}
    10000    0.010    0.000    0.082    0.000 {method 'any' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    10000    0.061    0.000    0.061    0.000 {method 'exponential' of 'mtrand.RandomState' objects}
    10000    0.015    0.000    0.015    0.000 {method 'rand' of 'mtrand.RandomState' objects}
    20000    0.137    0.000    0.137    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    10000    0.039    0.000    0.039    0.000 {method 'repeat' of 'numpy.ndarray' objects}
    30000    0.034    0.000    0.034    0.000 {method 'reshape' of 'numpy.ndarray' objects}

# Vectorize calc_transitions
900008 function calls in 3.796 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    3.796    3.796 <string>:1(<module>)
    10000    0.019    0.000    0.125    0.000 fromnumeric.py:1821(sum)
    10000    0.024    0.000    0.101    0.000 fromnumeric.py:64(_wrapreduction)
    10000    0.263    0.000    0.705    0.000 kmc_dopant_networks.py:1009(calc_transitions_possible)
    10000    0.259    0.000    0.411    0.000 kmc_dopant_networks.py:1053(calc_energy_differences)
        1    0.051    0.051    3.796    3.796 kmc_dopant_networks.py:360(simulate)
        1    0.000    0.000    0.000    0.000 kmc_dopant_networks.py:391(reset)
    10000    0.232    0.000    0.518    0.000 kmc_dopant_networks.py:716(calc_site_energies_acc)
    10000    0.367    0.000    1.483    0.000 kmc_dopant_networks.py:752(calc_transitions_MA)
    10000    0.010    0.000    0.145    0.000 kmc_dopant_networks.py:779(callback_standard)
    10000    0.025    0.000    0.058    0.000 kmc_dopant_networks.py:787(callback_avg_carriers)
    10000    0.077    0.000    0.077    0.000 kmc_dopant_networks.py:795(callback_current_vectors)
    10000    1.357    0.000    1.556    0.000 kmc_dopant_networks.py:812(pick_event_standard)
    10000    0.037    0.000    0.037    0.000 kmc_dopant_networks.py:878(perform_event_standard)
    10001    0.006    0.000    0.006    0.000 kmc_dopant_networks.py:895(stopping_criterion_discrete)
    50000    0.356    0.000    0.695    0.000 shape_base.py:1069(tile)
   120000    0.036    0.000    0.036    0.000 shape_base.py:1140(<genexpr>)
   150000    0.037    0.000    0.037    0.000 shape_base.py:1150(<genexpr>)
    50000    0.020    0.000    0.041    0.000 {built-in method builtins.all}
        1    0.000    0.000    3.796    3.796 {built-in method builtins.exec}
    10000    0.006    0.000    0.006    0.000 {built-in method builtins.isinstance}
    50000    0.010    0.000    0.010    0.000 {built-in method builtins.len}
    10000    0.077    0.000    0.077    0.000 {built-in method builtins.min}
    10000    0.033    0.000    0.033    0.000 {built-in method builtins.sum}
    50000    0.027    0.000    0.027    0.000 {built-in method numpy.core.multiarray.array}
    10000    0.014    0.000    0.014    0.000 {built-in method numpy.core.multiarray.where}
    10002    0.031    0.000    0.031    0.000 {built-in method numpy.core.multiarray.zeros}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    10000    0.062    0.000    0.062    0.000 {method 'exponential' of 'mtrand.RandomState' objects}
    10000    0.002    0.000    0.002    0.000 {method 'items' of 'dict' objects}
    10000    0.015    0.000    0.015    0.000 {method 'rand' of 'mtrand.RandomState' objects}
    10000    0.075    0.000    0.075    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    50000    0.135    0.000    0.135    0.000 {method 'repeat' of 'numpy.ndarray' objects}
   150000    0.127    0.000    0.127    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    20000    0.007    0.000    0.007    0.000 {method 'transpose' of 'numpy.ndarray' objects}

# Optimize calc_transitions_possible
480008 function calls in 3.358 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    3.358    3.358 <string>:1(<module>)
    10000    0.018    0.000    0.121    0.000 fromnumeric.py:1821(sum)
    10000    0.024    0.000    0.097    0.000 fromnumeric.py:64(_wrapreduction)
    10000    0.212    0.000    0.212    0.000 kmc_dopant_networks.py:1033(calc_transitions_possible)
    10000    0.259    0.000    0.413    0.000 kmc_dopant_networks.py:1077(calc_energy_differences)
        1    0.050    0.050    3.358    3.358 kmc_dopant_networks.py:360(simulate)
        1    0.000    0.000    0.000    0.000 kmc_dopant_networks.py:391(reset)
    10000    0.234    0.000    0.525    0.000 kmc_dopant_networks.py:716(calc_site_energies_acc)
    10000    0.362    0.000    0.987    0.000 kmc_dopant_networks.py:752(calc_transitions_MA)
    10000    0.010    0.000    0.145    0.000 kmc_dopant_networks.py:779(callback_standard)
    10000    0.024    0.000    0.059    0.000 kmc_dopant_networks.py:787(callback_avg_carriers)
    10000    0.077    0.000    0.077    0.000 kmc_dopant_networks.py:795(callback_current_vectors)
    10000    1.396    0.000    1.608    0.000 kmc_dopant_networks.py:812(pick_event_standard)
    10000    0.037    0.000    0.037    0.000 kmc_dopant_networks.py:878(perform_event_standard)
    10001    0.006    0.000    0.006    0.000 kmc_dopant_networks.py:895(stopping_criterion_discrete)
    20000    0.152    0.000    0.296    0.000 shape_base.py:1069(tile)
    40000    0.015    0.000    0.015    0.000 shape_base.py:1140(<genexpr>)
    60000    0.016    0.000    0.016    0.000 shape_base.py:1150(<genexpr>)
    20000    0.008    0.000    0.015    0.000 {built-in method builtins.all}
        1    0.000    0.000    3.358    3.358 {built-in method builtins.exec}
    10000    0.006    0.000    0.006    0.000 {built-in method builtins.isinstance}
    20000    0.004    0.000    0.004    0.000 {built-in method builtins.len}
    10000    0.079    0.000    0.079    0.000 {built-in method builtins.min}
    10000    0.034    0.000    0.034    0.000 {built-in method builtins.sum}
    20000    0.012    0.000    0.012    0.000 {built-in method numpy.core.multiarray.array}
    10000    0.014    0.000    0.014    0.000 {built-in method numpy.core.multiarray.where}
    10002    0.037    0.000    0.037    0.000 {built-in method numpy.core.multiarray.zeros}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    10000    0.064    0.000    0.064    0.000 {method 'exponential' of 'mtrand.RandomState' objects}
    10000    0.002    0.000    0.002    0.000 {method 'items' of 'dict' objects}
    10000    0.018    0.000    0.018    0.000 {method 'rand' of 'mtrand.RandomState' objects}
    10000    0.071    0.000    0.071    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    20000    0.060    0.000    0.060    0.000 {method 'repeat' of 'numpy.ndarray' objects}
    60000    0.054    0.000    0.054    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    10000    0.004    0.000    0.004    0.000 {method 'transpose' of 'numpy.ndarray' objects}

# Optimize pick_event_standard
520008 function calls in 2.184 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.184    2.184 <string>:1(<module>)
    10000    0.018    0.000    0.119    0.000 fromnumeric.py:1821(sum)
    10000    0.013    0.000    0.078    0.000 fromnumeric.py:2092(cumsum)
    10000    0.008    0.000    0.065    0.000 fromnumeric.py:49(_wrapfunc)
    10000    0.023    0.000    0.095    0.000 fromnumeric.py:64(_wrapreduction)
    10000    0.255    0.000    0.408    0.000 kmc_dopant_networks.py:1035(calc_energy_differences)
        1    0.049    0.049    2.184    2.184 kmc_dopant_networks.py:360(simulate)
        1    0.000    0.000    0.000    0.000 kmc_dopant_networks.py:391(reset)
    10000    0.230    0.000    0.514    0.000 kmc_dopant_networks.py:716(calc_site_energies_acc)
    10000    0.355    0.000    0.972    0.000 kmc_dopant_networks.py:752(calc_transitions_MA)
    10000    0.010    0.000    0.147    0.000 kmc_dopant_networks.py:779(callback_standard)
    10000    0.024    0.000    0.057    0.000 kmc_dopant_networks.py:787(callback_avg_carriers)
    10000    0.080    0.000    0.080    0.000 kmc_dopant_networks.py:795(callback_current_vectors)
    10000    0.179    0.000    0.453    0.000 kmc_dopant_networks.py:812(pick_event_standard)
    10000    0.043    0.000    0.043    0.000 kmc_dopant_networks.py:865(perform_event_standard)
    10001    0.006    0.000    0.006    0.000 kmc_dopant_networks.py:882(stopping_criterion_discrete)
    10000    0.208    0.000    0.208    0.000 kmc_dopant_networks.py:996(calc_transitions_possible)
    20000    0.152    0.000    0.291    0.000 shape_base.py:1069(tile)
    40000    0.015    0.000    0.015    0.000 shape_base.py:1140(<genexpr>)
    60000    0.016    0.000    0.016    0.000 shape_base.py:1150(<genexpr>)
    20000    0.008    0.000    0.015    0.000 {built-in method builtins.all}
        1    0.000    0.000    2.184    2.184 {built-in method builtins.exec}
    10000    0.004    0.000    0.004    0.000 {built-in method builtins.getattr}
    10000    0.006    0.000    0.006    0.000 {built-in method builtins.isinstance}
    20000    0.004    0.000    0.004    0.000 {built-in method builtins.len}
    10000    0.079    0.000    0.079    0.000 {built-in method builtins.min}
    10000    0.032    0.000    0.032    0.000 {built-in method builtins.sum}
    20000    0.011    0.000    0.011    0.000 {built-in method numpy.core.multiarray.array}
    10000    0.014    0.000    0.014    0.000 {built-in method numpy.core.multiarray.where}
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
    10000    0.053    0.000    0.053    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    10000    0.060    0.000    0.060    0.000 {method 'exponential' of 'mtrand.RandomState' objects}
    10000    0.027    0.000    0.027    0.000 {method 'flatten' of 'numpy.ndarray' objects}
    10000    0.002    0.000    0.002    0.000 {method 'items' of 'dict' objects}
    10000    0.016    0.000    0.016    0.000 {method 'rand' of 'mtrand.RandomState' objects}
    10000    0.070    0.000    0.070    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    20000    0.056    0.000    0.056    0.000 {method 'repeat' of 'numpy.ndarray' objects}
    60000    0.054    0.000    0.054    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    10000    0.004    0.000    0.004    0.000 {method 'transpose' of 'numpy.ndarray' objects}

# Replace tile by repeat in calc_site_energies_acc
440008 function calls in 1.996 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.996    1.996 <string>:1(<module>)
    10000    0.016    0.000    0.110    0.000 fromnumeric.py:1821(sum)
    10000    0.012    0.000    0.071    0.000 fromnumeric.py:2092(cumsum)
    10000    0.008    0.000    0.056    0.000 fromnumeric.py:404(repeat)
    20000    0.015    0.000    0.107    0.000 fromnumeric.py:49(_wrapfunc)
    10000    0.022    0.000    0.089    0.000 fromnumeric.py:64(_wrapreduction)
    10000    0.243    0.000    0.403    0.000 kmc_dopant_networks.py:1035(calc_energy_differences)
        1    0.046    0.046    1.996    1.996 kmc_dopant_networks.py:360(simulate)
        1    0.000    0.000    0.000    0.000 kmc_dopant_networks.py:391(reset)
    10000    0.214    0.000    0.391    0.000 kmc_dopant_networks.py:716(calc_site_energies_acc)
    10000    0.340    0.000    0.944    0.000 kmc_dopant_networks.py:752(calc_transitions_MA)
    10000    0.010    0.000    0.141    0.000 kmc_dopant_networks.py:779(callback_standard)
    10000    0.023    0.000    0.054    0.000 kmc_dopant_networks.py:787(callback_avg_carriers)
    10000    0.077    0.000    0.077    0.000 kmc_dopant_networks.py:795(callback_current_vectors)
    10000    0.170    0.000    0.428    0.000 kmc_dopant_networks.py:812(pick_event_standard)
    10000    0.041    0.000    0.041    0.000 kmc_dopant_networks.py:865(perform_event_standard)
    10001    0.006    0.000    0.006    0.000 kmc_dopant_networks.py:882(stopping_criterion_discrete)
    10000    0.201    0.000    0.201    0.000 kmc_dopant_networks.py:996(calc_transitions_possible)
    10000    0.078    0.000    0.145    0.000 shape_base.py:1069(tile)
    20000    0.008    0.000    0.008    0.000 shape_base.py:1140(<genexpr>)
    30000    0.008    0.000    0.008    0.000 shape_base.py:1150(<genexpr>)
    10000    0.004    0.000    0.008    0.000 {built-in method builtins.all}
        1    0.000    0.000    1.996    1.996 {built-in method builtins.exec}
    20000    0.006    0.000    0.006    0.000 {built-in method builtins.getattr}
    10000    0.005    0.000    0.005    0.000 {built-in method builtins.isinstance}
    10000    0.002    0.000    0.002    0.000 {built-in method builtins.len}
    10000    0.075    0.000    0.075    0.000 {built-in method builtins.min}
    10000    0.031    0.000    0.031    0.000 {built-in method builtins.sum}
    10000    0.006    0.000    0.006    0.000 {built-in method numpy.core.multiarray.array}
    10000    0.013    0.000    0.013    0.000 {built-in method numpy.core.multiarray.where}
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
    10000    0.049    0.000    0.049    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    10000    0.057    0.000    0.057    0.000 {method 'exponential' of 'mtrand.RandomState' objects}
    10000    0.026    0.000    0.026    0.000 {method 'flatten' of 'numpy.ndarray' objects}
    10000    0.002    0.000    0.002    0.000 {method 'items' of 'dict' objects}
    10000    0.015    0.000    0.015    0.000 {method 'rand' of 'mtrand.RandomState' objects}
    10000    0.065    0.000    0.065    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    20000    0.061    0.000    0.061    0.000 {method 'repeat' of 'numpy.ndarray' objects}
    40000    0.038    0.000    0.038    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    10000    0.004    0.000    0.004    0.000 {method 'transpose' of 'numpy.ndarray' objects}

# Replace tile by repeat in calc_energy_differences
360008 function calls in 1.842 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.842    1.842 <string>:1(<module>)
    10000    0.016    0.000    0.108    0.000 fromnumeric.py:1821(sum)
    10000    0.011    0.000    0.068    0.000 fromnumeric.py:2092(cumsum)
    20000    0.015    0.000    0.096    0.000 fromnumeric.py:404(repeat)
    30000    0.019    0.000    0.138    0.000 fromnumeric.py:49(_wrapfunc)
    10000    0.023    0.000    0.087    0.000 fromnumeric.py:64(_wrapreduction)
    10000    0.232    0.000    0.291    0.000 kmc_dopant_networks.py:1035(calc_energy_differences)
        1    0.045    0.045    1.842    1.842 kmc_dopant_networks.py:360(simulate)
        1    0.000    0.000    0.000    0.000 kmc_dopant_networks.py:391(reset)
    10000    0.210    0.000    0.383    0.000 kmc_dopant_networks.py:716(calc_site_energies_acc)
    10000    0.329    0.000    0.816    0.000 kmc_dopant_networks.py:752(calc_transitions_MA)
    10000    0.010    0.000    0.140    0.000 kmc_dopant_networks.py:779(callback_standard)
    10000    0.023    0.000    0.054    0.000 kmc_dopant_networks.py:787(callback_avg_carriers)
    10000    0.076    0.000    0.076    0.000 kmc_dopant_networks.py:795(callback_current_vectors)
    10000    0.166    0.000    0.412    0.000 kmc_dopant_networks.py:812(pick_event_standard)
    10000    0.041    0.000    0.041    0.000 kmc_dopant_networks.py:865(perform_event_standard)
    10001    0.006    0.000    0.006    0.000 kmc_dopant_networks.py:882(stopping_criterion_discrete)
    10000    0.195    0.000    0.195    0.000 kmc_dopant_networks.py:996(calc_transitions_possible)
        1    0.000    0.000    1.842    1.842 {built-in method builtins.exec}
    30000    0.007    0.000    0.007    0.000 {built-in method builtins.getattr}
    10000    0.005    0.000    0.005    0.000 {built-in method builtins.isinstance}
    10000    0.073    0.000    0.073    0.000 {built-in method builtins.min}
    10000    0.031    0.000    0.031    0.000 {built-in method builtins.sum}
    10000    0.012    0.000    0.012    0.000 {built-in method numpy.core.multiarray.where}
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
    10000    0.048    0.000    0.048    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    10000    0.054    0.000    0.054    0.000 {method 'exponential' of 'mtrand.RandomState' objects}
    10000    0.024    0.000    0.024    0.000 {method 'flatten' of 'numpy.ndarray' objects}
    10000    0.002    0.000    0.002    0.000 {method 'items' of 'dict' objects}
    10000    0.014    0.000    0.014    0.000 {method 'rand' of 'mtrand.RandomState' objects}
    10000    0.063    0.000    0.063    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    20000    0.064    0.000    0.064    0.000 {method 'repeat' of 'numpy.ndarray' objects}
    20000    0.023    0.000    0.023    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    10000    0.004    0.000    0.004    0.000 {method 'transpose' of 'numpy.ndarray' objects}

# Let's stop here for now and build a nice profiler script, which also checks scaling etc.

# discovered numba, jitted calc_site_energies, calc_transitions and pick_event+perform event.
90008 function calls in 0.205 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.205    0.205 <string>:1(<module>)
    10000    0.026    0.000    0.026    0.000 kmc_dopant_networks.py:120(_pick_event)
    10000    0.012    0.000    0.012    0.000 kmc_dopant_networks.py:47(_calc_site_energies_acc)
        1    0.023    0.023    0.205    0.205 kmc_dopant_networks.py:491(simulate)
        1    0.000    0.000    0.000    0.000 kmc_dopant_networks.py:520(reset)
    10000    0.027    0.000    0.039    0.000 kmc_dopant_networks.py:845(calc_site_energies_acc)
    10000    0.029    0.000    0.065    0.000 kmc_dopant_networks.py:860(calc_transitions_MA)
    10000    0.004    0.000    0.021    0.000 kmc_dopant_networks.py:882(callback_standard)
    10000    0.017    0.000    0.017    0.000 kmc_dopant_networks.py:906(callback_traffic)
    10000    0.028    0.000    0.055    0.000 kmc_dopant_networks.py:913(pick_event_standard)
    10000    0.035    0.000    0.035    0.000 kmc_dopant_networks.py:94(_calc_transitions_MA)
    10001    0.004    0.000    0.004    0.000 kmc_dopant_networks.py:980(stopping_criterion_discrete)
        1    0.000    0.000    0.205    0.205 {built-in method builtins.exec}
        2    0.000    0.000    0.000    0.000 {built-in method numpy.core.multiarray.zeros}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


